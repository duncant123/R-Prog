# Plotting
sql<-"select year(regdate) Yr, month(regdate) Mth,  sex, worktype,  count(claimid) claims, sum(if(weekly_comp='Y',1,0)) as wc , sum( if( SeriousInjInd = 'Y', 1, 0 ) ) SI
from claims
where regdate > '20050101 00:00:00'
group by Yr, Mth, sex, worktype"
con <- dbConnect(MySQL(), user="root",client.flag=CLIENT_MULTI_RESULTS, dbname= "econometrics")
rows <- dbGetQuery(con, sql)
# Convert year and month back to a date column
rows$Month<-as.Date(paste(rows$Yr,rows$Mth,1),"%Y %m %d")
library(RMYSql)
library(RmySQL)
library(RMySQL)
# Plotting
sql<-"select year(regdate) Yr, month(regdate) Mth,  sex, worktype,  count(claimid) claims, sum(if(weekly_comp='Y',1,0)) as wc , sum( if( SeriousInjInd = 'Y', 1, 0 ) ) SI
from claims
where regdate > '20050101 00:00:00'
group by Yr, Mth, sex, worktype"
con <- dbConnect(MySQL(), user="root",client.flag=CLIENT_MULTI_RESULTS, dbname= "econometrics")
rows <- dbGetQuery(con, sql)
# Convert year and month back to a date column
rows$Month<-as.Date(paste(rows$Yr,rows$Mth,1),"%Y %m %d")
str(rows)
ggplot(data = rows) +geom_line( aes(x=Month , y=cr ,group=swt, colour=swt )) + scale_x_date(breaks = "3 months", labels = date_format("%b %y") ) + coord_cartesian( xlim=c(as.Date("2006-1-1"),as.Date("2014-08-1")) ) + theme(axis.text.x=element_text(angle=45,hjust=1,vjust=0.5))
library(ggplot2)
ggplot(data = rows) +geom_line( aes(x=Month , y=cr ,group=swt, colour=swt )) + scale_x_date(breaks = "3 months", labels = date_format("%b %y") ) + coord_cartesian( xlim=c(as.Date("2006-1-1"),as.Date("2014-08-1")) ) + theme(axis.text.x=element_text(angle=45,hjust=1,vjust=0.5))
library(scales)
ggplot(data = rows) +geom_line( aes(x=Month , y=cr ,group=swt, colour=swt )) + scale_x_date(breaks = "3 months", labels = date_format("%b %y") ) + coord_cartesian( xlim=c(as.Date("2006-1-1"),as.Date("2014-08-1")) ) + theme(axis.text.x=element_text(angle=45,hjust=1,vjust=0.5))
rows$cr <- rows$wc / rows$claims
ggplot(data = rows) +geom_line( aes(x=Month , y=cr ,group=swt, colour=swt )) + scale_x_date(breaks = "3 months", labels = date_format("%b %y") ) + coord_cartesian( xlim=c(as.Date("2006-1-1"),as.Date("2014-08-1")) ) + theme(axis.text.x=element_text(angle=45,hjust=1,vjust=0.5))
rows$swt <- paste( rows$sex, "-", rows$worktype)
ggplot(data = rows) +geom_line( aes(x=Month , y=cr ,group=swt, colour=swt )) + scale_x_date(breaks = "3 months", labels = date_format("%b %y") ) + coord_cartesian( xlim=c(as.Date("2006-1-1"),as.Date("2014-08-1")) ) + theme(axis.text.x=element_text(angle=45,hjust=1,vjust=0.5))
ggplot(data = rows) +geom_line( aes(x=Month , y=cr ,group=swt, colour=swt )) + scale_x_date(breaks = "3 months", labels = date_format("%b %y") ) + coord_cartesian( xlim=c(as.Date("2006-1-1"),as.Date("2014-08-1")) ) + theme(axis.text.x=element_text(angle=45,hjust=1,vjust=0.5)) +ylab ="Claim Rate"
ggplot(data = rows) +geom_line( aes(x=Month , y=cr ,group=swt, colour=swt )) + scale_x_date(breaks = "3 months", labels = date_format("%b %y") ,ylab ="Claim Rate" ) + coord_cartesian( xlim=c(as.Date("2006-1-1"),as.Date("2014-08-1")) ) + theme(axis.text.x=element_text(angle=45,hjust=1,vjust=0.5))
ggplot(data = rows) +geom_line( aes(x=Month , y=cr ,group=swt, colour=swt )) + scale_x_date(breaks = "3 months", labels = date_format("%b %y") ) + coord_cartesian( xlim=c(as.Date("2006-1-1"),as.Date("2014-08-1")) ) + theme(axis.text.x=element_text(angle=45,hjust=1,vjust=0.5), ylab ="Claim Rate")
ggplot(data = rows) +geom_line( aes(x=Month , y=cr ,group=swt, colour=swt )) + scale_x_date(breaks = "3 months", labels = date_format("%b %y") ) + coord_cartesian( xlim=c(as.Date("2006-1-1"),as.Date("2014-08-1")) ) + theme(axis.text.x=element_text(angle=45,hjust=1,vjust=0.5), yLab ="Claim Rate")
ggplot(data = rows) +geom_line( aes(x=Month , y=cr ,group=swt, colour=swt )) + scale_x_date(breaks = "3 months", labels = date_format("%b %y") ) + coord_cartesian( xlim=c(as.Date("2006-1-1"),as.Date("2014-08-1")) ) + theme(axis.text.x=element_text(angle=45,hjust=1,vjust=0.5))
g <- ggplot(data = rows) +geom_line( aes(x=Month , y=cr ,group=swt, colour=swt )) + scale_x_date(breaks = "3 months", labels = date_format("%b %y") ) + coord_cartesian( xlim=c(as.Date("2006-1-1"),as.Date("2014-08-1")) ) + theme(axis.text.x=element_text(angle=45,hjust=1,vjust=0.5))
g <- g+  ggplot(data = rows) +geom_line( aes(x=Month , y=claims ,group=swt, colour=swt )) + scale_x_date(breaks = "3 months", labels = date_format("%b %y") ) + coord_cartesian( xlim=c(as.Date("2006-1-1"),as.Date("2014-08-1")) )
g <- g + geom_line( aes(x=Month , y=claims ,group=swt, colour=swt )) + scale_x_date(breaks = "3 months", labels = date_format("%b %y") ) + coord_cartesian( xlim=c(as.Date("2006-1-1"),as.Date("2014-08-1")) )
g <- g + geom_line( aes(x=Month , y=claims ,group=swt, colour=swt )) + coord_cartesian( xlim=c(as.Date("2006-1-1"),as.Date("2014-08-1")) )
g
library(UsingR)
data(diamond)
plot(diamond$price, diamond$price)
plot(diamond$price, diamond$carat)
plot(diamond$carat, diamond$price)
fit <- lm(price ~ carat, diamond)
coef(fit)
fit.r2
fit.r
fit.rsquared
fit2 <- lm(price ~ I(carat-mean(carat)), diamond)
coef(fit2)
fit3 <- lm(price ~ I(carat * 10), diamond)
coef(fit3)
newx <- c(0.16, 0.27, 0.34)
coef(fit)[1],+coef(fit2)[2]* newx
coef(fit)[1]+coef(fit2)[2]* newx
coef(fit)[1]+coef(fit)[2]* newx
predict(fit,newdata = data.frame(carat =newx) )
plot(diamond$carat, diamond$price, xlab="Mass (carats)", ylab="Price (SIN $)",bg = "lightblue",col="black",cex=1.1,pch=21, frame=F)
abline(lm(price~carat, diamond), lwd=2)
wt<-unique(rows$worktype);
par(mfrow = c(2,4))
for ( i in 1:length(wt) ) { data <- rows[ rows$worktype ==wt[i],c("claims","wc")]; plot(data, main = paste( wt[i], ": R2=", round((cor( data$wc, data$claims))^2 ,digits =2) ) )}
for ( i in 1:length(wt) ) { data <- rows[ rows$worktype ==wt[i],c("claims","wc")]; plot(data, main = paste( wt[i], "(Mths): R2=", round((cor( data$wc, data$claims))^2 ,digits =2) ) )}
?cor
sql <- "select year(regdate) Yr, month(regdate) Mth,  sex, worktype,  acciage, count(claimid) claims, sum(if(weekly_comp='Y',1,0)) as wc , sum( if( SeriousInjInd = 'Y', 1, 0 ) ) SI \nfrom claims\nwhere regdate > '20050101 00:00:00' \ngroup by Yr, Mth, sex, worktype, acciage"
rows <- dbGetQuery(con, sql)
con <- dbConnect(MySQL(), user="root",client.flag=CLIENT_MULTI_RESULTS, dbname= "econometrics")
rows <- dbGetQuery(con, sql)
for ( i in 1:length(wt) ) { data <- rows[ rows$worktype ==wt[i],c("claims","wc")]; plot(data, main = paste( wt[i], "(Mths): R2=", round((cor( data$wc, data$claims))^2 ,digits =2) ) )}
par(mfrow = c(2,4))
for ( i in 1:length(wt) ) { data <- rows[ rows$worktype ==wt[i],c("claims","wc")]; plot(data, main = paste( wt[i], "(Mths): R2=", round((cor( data$wc, data$claims))^2 ,digits =2) ) )}
hw <- lm( rows$wc[rows$worktype == "Heavy Work"] ~ rows$claims[rows$worktype == "Heavy Work"])
hw
summary(hw)
predict(hw, newdata = data.frame(claims = newclaims )
)
for ( i in 1:length(wt) ) { data <- rows[ rows$worktype ==wt[i],c("claims","wc")]; paste( wt[i], "(Mths): R2=", round((cor( data$wc, data$claims))^2 ,digits =2) ) )}
for ( i in 1:length(wt) ) { data <- rows[ rows$worktype ==wt[i],c("claims","wc")]; paste( wt[i], "(Mths): R2=", round((cor( data$wc, data$claims))^2 ,digits =2)  )}
for ( i in 1:length(wt) ) { data <- rows[ rows$worktype ==wt[i],c("claims","wc")]; paste( wt[i], "(Mths): R2=", round((cor( data$wc, data$claims))^2 ,digits =2) ) )}
for ( i in 1:length(wt) ) { data <- rows[ rows$worktype ==wt[i],c("claims","wc")]; cat(paste( wt[i], "(Mths): R2=", round((cor( data$wc, data$claims))^2 ,digits =2) ) )}
for ( i in 1:length(wt) ) { data <- rows[ rows$worktype ==wt[i],c("claims","wc")]; cat(paste( wt[i], "(Mths): R2=", round((cor( data$wc, data$claims))^2 ,digits =2), "\n") )}
sql <- "select year(regdate) Yr, month(regdate) Mth,  sex, worktype,  count(claimid) claims, sum(if(weekly_comp='Y',1,0)) as wc , sum( if( SeriousInjInd = 'Y', 1, 0 ) ) SI
from claims
where regdate > '20050101 00:00:00'
group by Yr, Mth, sex, worktype"
rows <- dbGetQuery(con, sql)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h(2)
f
for ( i in 1:length(wt) ) { data <- rows[ rows$worktype ==wt[i],c("claims","wc")]; cat(paste( wt[i], "(Mths): R2=", round((cor( data$wc, data$claims))^2 ,digits =2), "\n") )}
sql <- "select year(regdate) Yr, month(regdate) Mth,  worktype,  count(claimid) claims, sum(if(weekly_comp='Y',1,0)) as wc
from claims
where regdate > '20050101 00:00:00'
group by Yr, Mth, worktype"
rows <- dbGetQuery(con, sql)
for ( i in 1:length(wt) ) { data <- rows[ rows$worktype ==wt[i],c("claims","wc")]; cat(paste( wt[i], "(Mths): R2=", round((cor( data$wc, data$claims))^2 ,digits =2), "\n") )}
View(rows)
sql <- "select year(regdate) Yr, month(regdate) Mth, acciage, worktype,  count(claimid) claims, sum(if(weekly_comp='Y',1,0)) as wc
from claims
where regdate > '20050101 00:00:00'
group by Yr, Mth, acciage, worktype"
rows <- dbGetQuery(con, sql)
for ( i in 1:length(wt) ) { data <- rows[ rows$worktype ==wt[i],c("claims","wc")]; cat(paste( wt[i], "(Mths): R2=", round((cor( data$wc, data$claims))^2 ,digits =2), "\n") )}
for ( i in 1:length(wt) ) { data <- rows[ rows$worktype ==wt[i],c("claims","wc")]; plot(data, main = paste( wt[i], "(Mths): R2=", round((cor( data$wc, data$claims))^2 ,digits =2) ) )}
> sql <- "select year(regdate) Yr, month(regdate) Mth,  worktype,  count(claimid) claims, sum(if(weekly_comp='Y',1,0)) as wc
+ from claims
+ where regdate > '20050101 00:00:00'
+ group by Yr, Mth, worktype"
> sql <- "select year(regdate) Yr, month(regdate) Mth,  worktype,  count(claimid) claims, sum(if(weekly_comp='Y',1,0)) as wc from claims where regdate > '20050101 00:00:00'  group by Yr, Mth, worktype"
sql <- "select year(regdate) Yr, month(regdate) Mth,  worktype,  count(claimid) claims, sum(if(weekly_comp='Y',1,0)) as wc from claims where regdate > '20050101 00:00:00'  group by Yr, Mth, worktype"
rows <- dbGetQuery(con, sql)
debug(ls)
ls()
quit
exit
.
0
1
q
quit
?
.
..
help
quit
help
help
where
help
getwd()
setwd("./Documents/R Programming/")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source(corr.R)
getwd()
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
?list.files
cr <- corr("/Users/duncan/Documents/R Programming/specdata", 150)
head(cr)
summary(cr)
cr <- corr("/Users/duncan/Documents/R Programming/specdata", 5000)
summary(cr)
cr <- corr("/Users/duncan/Documents/R Programming/specdata", 400)
summary(cr)
submit()
?cor
source("corr.R")
cr <- corr("/Users/duncan/Documents/R Programming/specdata", 400)
source("corr.R")
getwd()
setwd("../")
source("corr.R")
cr <- corr("/Users/duncan/Documents/R Programming/specdata", 400)
source("corr.R")
setwd("../")
source("corr.R")
cr <- corr("/Users/duncan/Documents/R Programming/specdata", 400)
cr <- corr("/Users/duncan/Documents/R Programming/specdata", 400)
summary(cr)
submit()
submit()
submit()
submit()
source("complete.R")
source("corr.R")
cr <- corr("/Users/duncan/Documents/R Programming/specdata", 400)
source("corr.R")
cr <- corr("/Users/duncan/Documents/R Programming/specdata", 400)
summary(cr)
round(summary(cr),4)
source("corr.R")
cr <- corr("/Users/duncan/Documents/R Programming/specdata", 400)
round(summary(cr),4)
submit()
submit()
submit()
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "0cbabe9634388885b2caa22000e5ef88c778565c")
myapp <- oauth_app("github", "dffd32e2d27ee0140ef8")
myapp <- oauth_app("github", "dffd32e2d27ee0140ef8", "43b4855c4039ae5b5412f123acfc15774003d0c1")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", "dffd32e2d27ee0140ef8", "43b4855c4039ae5b5412f123acfc15774003d0c1")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
str(req)
req[req$name=="datasharing"]
names(req)
httr
?httr
parsed_content(req)
c <- parsed_content(req)
c <- parsed_content(req as = 'parsed')
c <- parsed_content(req ,as = 'parsed')
c <- content(req ,as = 'parsed')
c
c$name
c$names
c$created_at
c[30]$created_at
c[[30]]
c[[30]]$name
c[[29]]$name
c[[1]]$name
c[[]]$name
c[[,,]]$name
c[[,]]$name
c[[]]$name
c[$name
c[]$name
c$name
c[[1]]$name
c[[2]]$name
c[[3]]$name
c[[4]]$name
c[[5]]$name
c[[5]]$created_at
con <- http://biostat.jhsph.edu/~jleek/contact.html
con <- "http://biostat.jhsph.edu/~jleek/contact.html"
htmlCode = readLines(con)
close(con)
htmlCode
htmlCode[10]
nchar(htmlCode[10])
lines <- c( 10,20,30,100)
nchar(htmlCode[lines])
con <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
htmlCode = readLines(con)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
getwd()
download.file( fileURL, destfile = "./test/Q2.for")
download.file( fileURL, destfile = "./test/Q2.for", method = "curl")
fdata <- read.table("./test/Q2.for")
head(fdata)
fdata <- read.table("./test/Q2.for", header = TRUE)
fdata <- read.table("./test/Q2.for", header = TRUE, skip=1)
fdata <- read.table("./test/Q2.for", header = TRUE, skip=2)
fdata <- read.table("./test/Q2.for",  skip=2)
?read.table
fdata <- read.fwf("./test/Q2.for",  skip=3, header=T, widths=c(12,7,4,9,4,9,4,9,4) )
fdata <- read.fwf("./test/Q2.for",  skip=4, widths=c(12,7,4,9,4,9,4,9,4) )
head(fdata)
sum(fdata$V4)
?mtcars
